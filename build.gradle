plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'com.github.hierynomus.license' version '0.12.1'
    id 'ninja.miserable.blossom' version '1.0.1'
    id 'maven'
}

ext.url = 'http://qsml.dualspiral.co.uk'

group 'uk.co.drnaylor'
version '0.9.0-SNAPSHOT'

defaultTasks 'licenseFormat'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile "io.github.lukehutch:fast-classpath-scanner:2.0.21"
    compile "ninja.leaping.configurate:configurate-core:3.2"
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    testCompile "ninja.leaping.configurate:configurate-gson:3.2"

    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.10.19"
}

license {
    ext.name = 'QuickStart Module Loader'

    exclude "**/*.info"
    exclude "**/*.json"
    exclude "assets/**"
    exclude "*.properties"

    header file('HEADER.txt')
    sourceSets = project.sourceSets

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

blossom {
    def location = 'src/main/java/uk/co/drnaylor/quickstart/Metadata.java'

    // replaceToken '@id@', project.name.toLowerCase(), location
    replaceToken '@name@', 'QuickStart Module Loader', location
    replaceToken '@version@', project.version, location
    replaceToken '@informativeVersion@', project.version + "+" + getGitHash(), location
}

jar {
    manifest {
        attributes  'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Git-Hash': getGitHash()
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def private String getGitHash() {
    def process = 'git rev-parse --short HEAD'.execute();
    process.waitFor();
    return process.exitValue() ? 'unknown' : process.text.trim();
}
